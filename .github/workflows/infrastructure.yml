name: Provision Infrastructure
run-name: Provision Infrastructure
on:
  push:
    branches: [main]
    paths:
      - .github/workflows/infrastructure.yml
      - _isx/**
  workflow_dispatch:
permissions:
  contents: read
defaults:
  run:
    working-directory: _isx/stg
jobs:
  stg:
    name: Provision Staging Infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repository
        uses: actions/checkout@v4

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Initialize Terraform Files
        run: terraform init -input=false

      - name: Plan Infrastructure
        run: terraform plan -input=false
          -var "AWS_ACCESS_KEY=${{secrets.AWS_ACCESS_KEY_ID}}"
          -var "AWS_SECRET_KEY=${{secrets.AWS_SECRET_ACCESS_KEY}}"
          -var "TEST_EMAIL=${{ secrets.TEST_EMAIL }}"

      - name: Provision Infrastructure
        run: terraform apply -auto-approve -input=false
          -var "AWS_ACCESS_KEY=${{secrets.AWS_ACCESS_KEY_ID}}"
          -var "AWS_SECRET_KEY=${{secrets.AWS_SECRET_ACCESS_KEY}}"
          -var "TEST_EMAIL=${{ secrets.TEST_EMAIL }}"

  prod:
    name: Provision Production Infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repository
        uses: actions/checkout@v4

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Initialize Terraform Files
        run: terraform init -input=false

      - name: Plan Infrastructure
        run: terraform plan -input=false
          -var "AWS_ACCESS_KEY=${{secrets.AWS_ACCESS_KEY_ID}}"
          -var "AWS_SECRET_KEY=${{secrets.AWS_SECRET_ACCESS_KEY}}"

      - name: Provision Infrastructure
        run: terraform apply -auto-approve -input=false
          -var "AWS_ACCESS_KEY=${{secrets.AWS_ACCESS_KEY_ID}}"
          -var "AWS_SECRET_KEY=${{secrets.AWS_SECRET_ACCESS_KEY}}"

isx-stg:
  image:
    name: hashicorp/terraform:1.12
    entrypoint: [""]
  script:
    - cd _isx/stg
    - terraform init
    - terraform plan -var="TEST_EMAIL=${TEST_EMAIL}"
      -var="AWS_ACCESS_KEY=${AWS_ACCESS_KEY}" -var="AWS_SECRET_KEY=${AWS_SECRET_KEY}"
    - terraform apply -auto-approve -var "TEST_EMAIL=${TEST_EMAIL}"
      -var="AWS_ACCESS_KEY=${AWS_ACCESS_KEY}" -var="AWS_SECRET_KEY=${AWS_SECRET_KEY}"
    - terraform apply -auto-approve -var="AWS_ACCESS_KEY=${AWS_ACCESS_KEY}"
      -var="AWS_SECRET_KEY=${AWS_SECRET_KEY}"

isx-prod:
  image:
    name: hashicorp/terraform:1.12
    entrypoint: [""]
  script:
    - cd _isx/prod
    - terraform init
    - terraform plan -var="AWS_ACCESS_KEY=${AWS_ACCESS_KEY}"
      -var="AWS_SECRET_KEY=${AWS_SECRET_KEY}"
    - terraform apply -auto-approve -var="AWS_ACCESS_KEY=${AWS_ACCESS_KEY}"
      -var="AWS_SECRET_KEY=${AWS_SECRET_KEY}"

shell-build:
  image: node:22-alpine
  artifacts:
    paths:
      - shell/dist
  script:
    - cd shell
    - npm ci
    - npm run build

shell-stg:
  image:
    name: amazon/aws-cli:2.27.33
    entrypoint: [""]
  needs:
    - shell-build
    - isx-stg
  dependencies:
    - shell-build
  script:
    - aws s3 sync --delete shell/dist s3://stg-mytasks-shell

shell-prod:
  image:
    name: amazon/aws-cli:2.27.33
    entrypoint: [""]
  needs:
    - shell-build
    - e2e
    - isx-prod
  dependencies:
    - shell-build
  script:
    - aws s3 sync --delete shell/dist s3://prod-mytasks-shell

auth-msvc-build:
  image: dotnet/sdk:9.0
  artifacts:
    paths:
      - auth/microservice/dist
  script:
    - cd auth/microservice
    - dotnet test --project Auth.UnitTests
    - dotnet test --project Auth.IntegrationTests
    - dotnet publish -o dist Auth

auth-msvc-stg:
  image:
    name: amazon/aws-cli:2.27.33
    entrypoint: [""]
  needs:
    - auth-msvc-build
    - isx-stg
  dependencies:
    - auth-msvc-build
  script:
    - aws ecr get-login-password --region eu-west-2 | docker login --username AWS
      --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.eu-west-2.amazonaws.com
    - docker build -t stg-mytasks/mytasks-auth Auth
    - docker push stg-mytasks/mytasks-auth

auth-msvc-prod:
  image:
    name: amazon/aws-cli:2.27.33
    entrypoint: [""]
  needs:
    - auth-msvc-build
    - e2e
    - isx-prod
  dependencies:
    - auth-msvc-build
  script:
    - aws ecr get-login-password --region eu-west-2 | docker login --username AWS
      --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.eu-west-2.amazonaws.com
    - docker build -t prod-mytasks/mytasks-auth Auth
    - docker push prod-mytasks/mytasks-auth

auth-mfe-build:
  image: node:22-alpine
  artifacts:
    paths:
      - auth/microfrontend/dist
  script:
    - cd auth/microfrontend
    - npm ci
    - npm run test
    - npm run build

auth-mfe-stg:
  image:
    name: amazon/aws-cli:2.27.33
    entrypoint: [""]
  needs:
    - auth-mfe-build
    - isx-stg
  dependencies:
    - auth-mfe-build
  script:
    - aws s3 sync --delete auth/microfrontend/dist s3://stg-mytasks-auth

auth-mfe-prod:
  image:
    name: amazon/aws-cli:2.27.33
    entrypoint: [""]
  needs:
    - auth-mfe-build
    - e2e
    - isx-prod
  dependencies:
    - auth-mfe-build
  script:
    - aws s3 sync --delete auth/microfrontend/dist s3://prod-mytasks-auth

tasks-msvc-build:
  image: dotnet/sdk:9.0
  artifacts:
    paths:
      - tasks/microservice/dist
  script:
    - cd tasks/microservice
    - dotnet test --project Tasks.UnitTests
    - dotnet test --project Tasks.IntegrationTests
    - dotnet publish -o dist Tasks

tasks-msvc-stg:
  image:
    name: amazon/aws-cli:2.27.33
    entrypoint: [""]
  needs:
    - tasks-msvc-build
    - isx-stg
  dependencies:
    - tasks-msvc-build
  script:
    - aws ecr get-login-password --region eu-west-2 | docker login --username AWS
      --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.eu-west-2.amazonaws.com
    - docker build -t stg-mytasks/mytasks-tasks Tasks
    - docker push stg-mytasks/mytasks-tasks

tasks-msvc-prod:
  image:
    name: amazon/aws-cli:2.27.33
    entrypoint: [""]
  needs:
    - tasks-msvc-build
    - e2e
    - isx-prod
  dependencies:
    - tasks-msvc-build
  script:
    - aws ecr get-login-password --region eu-west-2 | docker login --username AWS
      --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.eu-west-2.amazonaws.com
    - docker build -t prod-mytasks/mytasks-tasks Tasks
    - docker push prod-mytasks/mytasks-tasks

tasks-mfe-build:
  image: node:22-alpine
  artifacts:
    paths:
      - tasks/microfrontend/dist
  script:
    - cd tasks/microfrontend
    - npm ci
    - npm run build

tasks-mfe-stg:
  image:
    name: amazon/aws-cli:2.27.33
    entrypoint: [""]
  needs:
    - tasks-mfe-build
    - isx-stg
  dependencies:
    - tasks-mfe-build
  script:
    - aws s3 sync --delete tasks/microfrontend/dist s3://stg-mytasks-tasks

tasks-mfe-prod:
  image:
    name: amazon/aws-cli:2.27.33
    entrypoint: [""]
  needs:
    - tasks-mfe-build
    - e2e
    - isx-prod
  dependencies:
    - tasks-mfe-build
  script:
    - aws s3 sync --delete tasks/microfrontend/dist s3://prod-mytasks-tasks

e2e:
  image: cypress/included:14.4.1
  needs:
    - shell-stg
    - auth-msvc-stg
    - auth-mfe-stg
    - tasks-msvc-stg
    - tasks-mfe-stg
  script:
    - cd e2e
    - npm ci
    - npm run test
